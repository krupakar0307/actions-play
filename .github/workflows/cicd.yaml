name: Run CICD
on:
  push:
    branches:
      - main
  pull_request:

jobs: 
    build:
        runs-on: ubuntu-latest
        steps:
        - name: Checkout code
          uses: actions/checkout@v2
    
        - name: Install dependencies
          uses: actions/setup-python@v5
          with:
            python-version: '3.12'
        - run:
            pip install -r requirements.txts

        - name: Run tests
          run: echo "Running tests"
        
        - name: Deploy to staging
          run: echo "Deploying to staging"

        - name: Check PR Workflows
          run: |
            echo "üîç Fetching the latest 5 open PRs..."
            PRS=$(gh pr list --state open --limit 5 --json number --jq '.[].number')
  
            if [[ -z "$PRS" ]]; then
              echo "‚úÖ No open PRs found. Skipping..."
              exit 0
            fi
  
            FAILED=0
            for PR in $PRS; do
              echo "üöÄ Fetching latest workflow run for PR #$PR..."
              
              # Find the latest workflow run for the PR
              RUN_ID=$(gh run list --json databaseId,headSha,conclusion --jq ".[] | select(.conclusion != null) | .databaseId" | head -n 1)
  
              if [[ -z "$RUN_ID" ]]; then
                echo "‚ö†Ô∏è No previous workflow found for PR #$PR. Skipping..."
                continue
              fi
  
              # Fetch the commit SHA of the workflow run
              COMMIT_SHA=$(gh run view $RUN_ID --json headSha --jq '.headSha')
              if [[ -z "$COMMIT_SHA" ]]; then
                echo "‚ö†Ô∏è Could not fetch commit SHA for PR #$PR. Skipping commit message logging..."
                continue
              fi
  
              # Fetch the commit message of the failed workflow
              COMMIT_MESSAGE=$(gh api repos/:owner/:repo/commits/$COMMIT_SHA --jq '.commit.message')
  
              echo "üîÑ Re-running workflow for PR #$PR (Run ID: $RUN_ID)..."
              gh run rerun $RUN_ID
  
              sleep 10  # Give some time for workflow to start
  
              echo "üîç Checking workflow status for PR #$PR..."
              PR_STATUS=$(gh run view $RUN_ID --json conclusion --jq '.conclusion')
  
              if [[ "$PR_STATUS" == "failure" || "$PR_STATUS" == "cancelled" ]]; then
                echo "‚ùå PR #$PR workflow failed!"
                echo "üìù Commit that caused failure: $COMMIT_SHA"
                echo "üìú Commit message: $COMMIT_MESSAGE"
                FAILED=1
              else
                echo "‚úÖ PR #$PR workflow passed!"
              fi
            done
  
            if [[ "$FAILED" -eq 1 ]]; then
              echo "‚ùå One or more PR workflows failed. Failing main branch workflow."
              exit 1
            else
              echo "‚úÖ All checked PR workflows are successful!"
            fi
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
